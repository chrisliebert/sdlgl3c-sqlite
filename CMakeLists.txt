CMAKE_MINIMUM_REQUIRED(VERSION 2.8)

PROJECT(sdlgl3c-test)
PROJECT(sdlgl3c)

FIND_PACKAGE(OpenGL REQUIRED)
FIND_PACKAGE(GLEW REQUIRED)
FIND_PACKAGE(SQLITE3 QUIET)

INCLUDE(FindPkgConfig)
PKG_SEARCH_MODULE(SDL2 REQUIRED sdl2)
PKG_SEARCH_MODULE(SDL2_image REQUIRED SDL2_image)

IF(NOT OPENGL_FOUND)
	MESSAGE(ERROR " OPENGL not found!")
ENDIF(NOT OPENGL_FOUND)

IF(NOT GLEW_FOUND)
	MESSAGE(INFO " GLEW not found.")
ENDIF(NOT GLEW_FOUND)

IF(NOT SQLITE3_FOUND)
	PKG_SEARCH_MODULE(SQLITE3 REQUIRED sqlite3)
ENDIF(NOT SQLITE3_FOUND)

IF(NOT SQLITE3_FOUND)
	MESSAGE(ERROR " SQLITE3 not found")
ENDIF(NOT SQLITE3_FOUND)


INCLUDE_DIRECTORIES(include)
INCLUDE_DIRECTORIES(${OpenGL_INCLUDE_DIRS})
INCLUDE_DIRECTORIES(${GLEW_INCLUDE_DIRS})
INCLUDE_DIRECTORIES(${SDL2_INCLUDE_DIRS})
INCLUDE_DIRECTORIES(${SDL2_image_INCLUDE_DIRS})
INCLUDE_DIRECTORIES(${SQLITE3_INCLUDE_DIRS})

LINK_DIRECTORIES(${OpenGL_LIBRARY_DIRS})
LINK_DIRECTORIES(${GLEW_LIBRARY_DIRS})
LINK_DIRECTORIES(${SDL2_LIBRARY_DIRS})
LINK_DIRECTORIES(${SDL2_image_Library_DIRS})
LINK_DIRECTORIES(${SQLITE3_LIBRARY_DIRS})

ADD_DEFINITIONS(${OpenGL_DEFINITIONS})
ADD_DEFINITIONS(${SQLITE3_DEFINITIONS})

ADD_LIBRARY(GraphicsEngine
	include/Camera.h
	include/Common.h
	include/Frustum.h
	include/Matrix.h
	include/Renderer.h
	include/Shader.h
	include/SDLGLApp.h
	include/Vec3.h
	src/Camera.c
	src/Frustum.c
	src/Matrix.c
	src/Renderer.c
	src/Shader.c
	src/SDLGLApp.c
	src/Vec3.c
)

ADD_EXECUTABLE(sdlgl3c
	src/main.c
)

ADD_EXECUTABLE(sdlgl3c-test
	src/test.c
)

IF(MSVC)
TARGET_LINK_LIBRARIES(sdlgl3c-test GraphicsEngine ${SDL2_LIBRARIES} ${SDL2_image_LIBRARIES} ${OPENGL_LIBRARIES} ${OPENGL_glu_LIBRARY} ${GLEW_LIBRARY} ${SQLITE3_LIBRARIES})
TARGET_LINK_LIBRARIES(sdlgl3c GraphicsEngine ${SDL2_LIBRARIES} ${SDL2_image_LIBRARIES} ${OPENGL_LIBRARIES} ${OPENGL_glu_LIBRARY} ${GLEW_LIBRARY} ${SQLITE3_LIBRARIES})
ELSE(MSVC)
TARGET_LINK_LIBRARIES(sdlgl3c-test GraphicsEngine ${SDL2_LIBRARIES} ${SDL2_image_LIBRARIES} ${OPENGL_LIBRARIES} ${OPENGL_glu_LIBRARY} ${GLEW_LIBRARY} ${SQLITE3_LIBRARIES} m)
TARGET_LINK_LIBRARIES(sdlgl3c GraphicsEngine ${SDL2_LIBRARIES} ${SDL2_image_LIBRARIES} ${OPENGL_LIBRARIES} ${OPENGL_glu_LIBRARY} ${GLEW_LIBRARY} ${SQLITE3_LIBRARIES} m)
ENDIF(MSVC)